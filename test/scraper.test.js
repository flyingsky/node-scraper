var assert = require('assert');
var path = require('path');

var fse = require('fs-extra');

var helper = require('../lib/helper');
var Scraper = require('../lib/scraper');
var SimpleProcessor = Scraper.SimpleProcessor;
var imageDownloadProcessor = Scraper.ImageDownloadProcessor;
var fileDumpProcessor = Scraper.FileDumpProcessor;

describe('scraper', function() {
  this.timeout(1000 * 60 * 20);

  it('simple html', function(done) {
    var simpleProcessor = new SimpleProcessor({
      "imgSrc": {
        "selector": ".jqzoom img",
        "attr": "src"
      },
      "title": ".information h1",
      "description": ".information .theword"
    });
    var scraper = new Scraper();

    var opts = {
      uri: 'http://www.jufengshang.com/Longines3756',
      processors: [simpleProcessor]
    };

    scraper.scrapePage(opts, function(err, result) {
      console.log(result);

      assert(result);
      assert(result.title);
      assert(result.imgSrc);
      assert(result.description);

      done(err);
    });
  });

  it('html donwload and dump', function(done) {
    var simpleProcessor = new SimpleProcessor(path.resolve('test/simple-parser.json'));
    var scraper = new Scraper();

    var opts = {
      uri: 'http://www.jufengshang.com/Longines3756',
      dumpFile: helper.tmpName({prefix: 'non-js', postfix: '.html', dir: helper.getAppTmpDir()}),
      processors: [simpleProcessor, imageDownloadProcessor, fileDumpProcessor]
    };

    scraper.scrapePage(opts, function(err, result) {
      console.log(result);

      assert(result);
      assert(result.title);
      assert(result.imgSrc);
      assert(result.description);

      var downloadDir = helper.getAppTmpDir();
      var downloadedImage = path.join(downloadDir, path.basename(result.imgSrc));

      assert(result.downloadImgSrc == downloadedImage);
      assert(fse.existsSync(downloadedImage));
      assert(fse.existsSync(opts.dumpFile));

      fse.removeSync(downloadDir);

      done(err);
    });
  });

  it('html with js', function(done) {
    var simpleProcessor = new SimpleProcessor(path.resolve('test/simple-parser.json'));
    simpleProcessor.mapping.price = '.shop_s';  // this element is generated by js

    var scraper = new Scraper([simpleProcessor, imageDownloadProcessor, fileDumpProcessor]);

    var opts = {
      uri: 'http://www.jufengshang.com/Longines3756',
      usePhantom: true,
      dumpFile: helper.tmpName({prefix: 'js', postfix: '.html', dir: helper.getAppTmpDir()})
    };

    scraper.scrapePage(opts, function(err, result) {
      console.log(result);

      assert(result);
      assert(result.title);
      assert(result.imgSrc);
      assert(result.description);
      assert(result.price);

      done(err);
    });
  });

  it.only('complex scraper', function(done) {
    //'a[href*="/fashionshows/collections/"], a[href="/fashionshows/menswear"]',

    var homePageScraper = new Scraper({
      category: 'Look/Runway/Fasion Shows',
      uri: 'http://www.style.com',
      processors: new SimpleProcessor({
        category: 'a[href="/fashionshows/collections/2015RST/"]', //'a[href*="/fashionshows/collections/"]',
        uri: {
          selector: 'a[href="/fashionshows/collections/2015RST/"]', //'a[href*="/fashionshows/collections/"]',
          attr: 'href'
        }
      })
    });

    var collectionScraper = new Scraper({
      processors: [new SimpleProcessor({
        category: '#all_shows_tab_content a[href*="/fashionshows/review/"]',
        uri: {
          selector: '#all_shows_tab_content a[href*="/fashionshows/review/"]',
          attr: 'href'
        }
      }), { // use this process to convert previous output uri to speed
        process: function(input, context, callback) {
          input.uri.forEach(function(uri, index){
            input.uri[index] = uri.replace('/review/', '/complete/');
          });
          callback(null, input);
        }
      }]
    });

//    var reviewScraper = new Scraper({
//      processors: new SimpleProcessor({
//        uri: {
//          selector: '#tab-looks',
//          attr: 'href'
//        }
//      })
//    });

    var contentScraper = new Scraper({
      usePhantom: true,
      processors: [new SimpleProcessor({
        img: {
          selector: '#content_body img',
          attr: 'src',
          download: true
        }
      }), {
        process: function(input, context, callback) {
          input.img.forEach(function(img, index){
            input.img[index] = img.replace('.150x226.', '.450x675.');
          });
          callback(null, input);
        }
      }, imageDownloadProcessor]
    });

    new Scraper().scrapePage({
      scrapers: [homePageScraper, collectionScraper/*, reviewScraper*/, contentScraper]
    }, function(err, result) {
      console.log(result);
//      console.log(result.category.length);
      assert(result.category);
      done(err);
    });
  });
});